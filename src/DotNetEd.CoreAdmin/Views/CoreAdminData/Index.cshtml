@using NonFactors.Mvc.Grid
@using System.Linq.Expressions
@using Microsoft.EntityFrameworkCore
@model DotNetEd.CoreAdmin.ViewModels.DataListViewModel

@{
    ViewData["Page_Title"] = Model.DbSetProperty.Name;
    Layout = "_CoreAdminLayout";
}

<h1 class="display-4">@Model.DbSetProperty.Name</h1>

<div class="row">
    <div class="col-lg-12 my-3">
        @Html.ActionLink("Create new", "Create", new { id = Model.DbSetProperty.Name }, new { @class = "btn btn-primary"})
    </div>
</div>

@(Html
    .Grid(Model.Data)
    .Build((columns) => {

        foreach(var entityProperty in Model.EntityType.GetProperties())
        {


            ParameterExpression entity = Expression.Parameter(typeof(object), "ent");
            var changedType = Expression.Convert(entity, Model.EntityType);
            var property = Expression.Property(changedType, entityProperty.Name);

            if (entityProperty.PropertyType == typeof(Guid))
            {
                var lambda = Expression.Lambda<Func<object,Guid>>(property, entity);

                columns.Add(lambda).Titled(entityProperty.Name);
            }
            else if (entityProperty.PropertyType == typeof(string))
            {
                var lambda = Expression.Lambda<Func<object,string>>(property, entity);

                columns.Add(lambda).Titled(entityProperty.Name);
            }
            else if (entityProperty.PropertyType == typeof(Int32))
            {
                var lambda = Expression.Lambda<Func<object,Int32>>(property, entity);

                columns.Add(lambda).Titled(entityProperty.Name);
            }
            else if (entityProperty.PropertyType == typeof(DateTime))
            {
                var lambda = Expression.Lambda<Func<object,DateTime>>(property, entity);

                columns.Add(lambda).Titled(entityProperty.Name);
            }

        }

        // only supports single PKs, not composite ones
        var pkProperties = Model.DbContext.Model.FindEntityType(Model.EntityType).FindPrimaryKey().Properties;
        if (pkProperties.Count == 1)
        {
            var pKProperty = pkProperties.Single()?.PropertyInfo;

            if (pKProperty != null)
            {
                columns.Add(item => Html.ActionLink("Delete", "DeleteEntity", new { dbSetName = Model.DbSetProperty.Name, Id = pKProperty.GetValue(item)}));
                columns.Add(item => Html.ActionLink("Edit", "EditEntity", new { dbSetName = Model.DbSetProperty.Name, Id = pKProperty.GetValue(item) }));
            }
        }


    }

        )
    .Using(GridFilterMode.Header)
    .Empty("No data found")
    .Filterable()
    .Sortable()
    .Pageable()
)

@section Scripts
{
     <script>
           document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
        </script>
}


